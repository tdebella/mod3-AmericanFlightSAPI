#%RAML 1.0
title: mod3-Desiging-AmericanFlightSAPI
#baseUri: http://localhost:8081

    #we define/ declare data types here
types:
  AmericanFlight: !include /dataTypes/americanFlightDataType.raml

  #we define/ declare sensitive data here
uses:
  security: /library/Library.raml
  description: 
  we create API that operates all the CRUD operations

  #flights is the main resource
/flights:
  # we call/use the defined sensitive data here
  is: [security.client_id_enforcement]

    #get, post, put, patch, delete are methods(actions) acts upon the resource 
  get:
    description: it retrieves all flight s from the American DB
    queryParameters:
      destination:
        required: false
        enum:
          - SFO
          - LAX
          - CLE

    #we can create fragment in 3 ways: 
        #1) write the code on Canvas  
        #2) create folder & file in Files  
        #3) 
    responses:
      200:
        body:
          application/json: 
            type: AmericanFlight[]
            examples: !include /Examples/americanFlightsExample.raml

  post:
    body:
      application/json:
        type: AmericanFlight
        example: !include /Examples/americanFlightNoIDExample.raml
    responses:
      201:
        body:
          application/json:
            example:
              message: Flight added successfully.
          
    # ID is nested resource
  
  /{ID}:
    is: [security.client_id_enforcement]
    get:
      responses:
        200:
          body:
            application/json:
              type: AmericanFlight
              example: !include /Examples/americanFlightIDExample.raml
                
    delete:
      responses:
        200:
          body:
            application/json:
              example:
                message: Flight deleted successfully. 
    
      #put method replace [updates] the resource COMPLATELY. ID is required, on 
      #mocking we can enter any ID number, but on actual DB we MUST use actual ID number
    put:
      body:
        application/json:
          type: AmericanFlight
          example: !include /Examples/americanFlightNoIDExample.raml
      responses:
        200:
          body:
            application/json:
              example:
                message: Flight replaced successfully.
      #patch method replace [updates] the resource PARTIALLY. ID is required, on 
      #mocking we can enter any ID number, but on actual DB we MUST use actual ID number
    patch:
      body:
        application/json:
          type: AmericanFlight
          example: !include /Examples/americanFlightNoIDExample.raml
      responses:
        200:
          body:
            application/json:
              example:
                message: Flight replaced successfully.
      
      